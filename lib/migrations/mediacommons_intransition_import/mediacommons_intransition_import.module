<?php

$base_file = __DIR__ . '/../mediacommons_base_import/' . 'mediacommons_base_import.module';

function mediacommons_intransition_import_init() {

  $commands = array(
    array(
      'label' => t('Migrate Intransition Content'),
      'callback' => array(
        'mediacommons_base_import_generate_vocabulary',
      	'mediacommons_base_import_generate_terms',
      	'mediacommons_base_import_map_roles',
      	'mediacommons_base_import_prepare_taxonomy_fields',
      	'mediacommons_base_import_generate_all_users',
      	'mediacommons_base_import_migrate_user_realname',
      	'mediacommons_base_import_migrate_profile_fields',
      	'mediacommons_base_import_download_files', // download files that are managed by Drupal
        'mediacommons_base_import_add_allowed_iframe_sources', // mediacommons_filter filter <iframe> by source and only allow the ones listed in the allowed iframes list.
        'mediacommons_intransition_import_migrate_posts',
        'mediacommons_intransition_import_migrate_theme_weeks',
      	'mediacommons_base_import_body_field', // find <embed> and <object> and convert them into <iframe>
        'mediacommons_base_import_embed_field', // find <embed> and <object> and convert them into <iframe>
      ),
    ),
    array(
      'label' => t('Migrate posts'),
      'callback' => array(
        'mediacommons_intransition_import_migrate_posts',
      ),
    ),
    array(
      'label' => t('Migrate Theme Weeks'),
      'callback' => array(
        'mediacommons_intransition_import_migrate_theme_weeks'
      ),
    ),
    array(
      'label' => t('Delete Theme Weeks, Posts, comments and file registry'),
      'callback' => array(
        'mediacommons_base_import_delete_post',
        'mediacommons_base_import_delete_hubs',
        'mediacommons_base_import_delete_comments',
        'mediacommons_base_import_delete_files',
        'mediacommons_base_import_delete_alias'
      ),
    ),
    array(
      'label' => t('Echo 5 random Hubs URL'),
      'callback' => array(
        'mediacommons_intransition_import_test_content',
      ),
    ),
    array(
      'label' => t('Run test'),
      'callback' => array(
        'mediacommons_base_import_body_field', 'mediacommons_base_import_body_field',
      ),
    ),

  );

  mediacommons_base_import_init( array('commands' => $commands) );

}

if (file_exists($base_file)) {

  include_once($base_file);

  mediacommons_intransition_import_init();

}